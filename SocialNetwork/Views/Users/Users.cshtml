@using Elomoas.mvc.Models.Users;
@model UserVM;

@{
    ViewData["Title"] = "Users";
}

<style>
    .search-card {
        border: 3px solid #d1d1d1;
        border-radius: 15px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        background: #fff;
    }

    .user-image img {
        width: 60px !important;
        height: 60px !important;
        object-fit: cover;
        border-radius: 50%;
    }

    .user-image {
        display: inline-block;
        border-radius: 50%;
        overflow: hidden;
        box-shadow: 0 3px 10px rgba(0,0,0,0.1);
    }

    .search-card:hover {
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
        border-color: #b8b8b8;
    }

    .search-input {
        border: 2px solid #d1d1d1;
        padding: 15px 25px;
        font-size: 16px;
        border-radius: 12px;
        transition: all 0.3s ease;
        background-color: #f8f9fa;
    }

    .search-input:focus {
        border-color: #0d6efd;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        outline: none;
        background-color: #fff;
    }

    .search-input::placeholder {
        color: #6c757d;
        font-weight: 500;
    }

    .card-body.search-padding {
        padding: 15px 20px;
    }

    .section-header {
        background: linear-gradient(45deg, #f3f3f3, #ffffff);
        border: none;
        border-radius: 15px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

    .section-header h3 {
        color: #333;
        font-size: 1.5rem;
        margin: 0;
        padding: 10px 0;
    }

    .user-card {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 20px;
        transition: all 0.3s ease;
    }

    .user-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 15px rgba(0,0,0,0.1) !important;
    }

    .loading {
        position: relative;
        opacity: 0.6;
        pointer-events: none;
    }
    
    .loading::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 40px;
        height: 40px;
        margin: -20px 0 0 -20px;
        border: 4px solid #f3f3f3;
        border-top: 4px solid #0d6efd;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }
    
    /* User image styles */
    .user-card .user-image {
        display: inline-block;
        width: 120px;
        height: 120px;
        border-radius: 50%;
        overflow: hidden;
        box-shadow: 0 3px 10px rgba(0,0,0,0.1);
        margin-bottom: 15px;
    }

    .user-card .user-image img {
        width: 120px !important;
        height: 120px !important;
        object-fit: cover;
        border-radius: 50%;
        transition: transform 0.3s ease;
    }

    .user-card .user-image:hover img {
        transform: scale(1.05);
    }

    /* Override any existing image styles */
    .user-card img.w100,
    .user-card img.shadow-xss {
        width: 120px !important;
        height: 120px !important;
    }
</style>

<form id="antiForgeryForm">
    @Html.AntiForgeryToken()
</form>

<div class="middle-sidebar-bottom">
    <div class="middle-sidebar-left">
        <div class="card mb-4 search-card">
            <div class="card-body search-padding">
                <form id="searchForm" method="get" asp-controller="Users" asp-action="Users">
                    <div class="form-group mb-0">
                        <input type="text" 
                               id="userSearch" 
                               name="search"
                               value="@Model.SearchTerm"
                               class="form-control search-input" 
                               placeholder="🔍 Search users by name or email..."
                               autocomplete="off">
                    </div>
                </form>
            </div>
        </div>
        
        <div id="usersContainer" class="row users-container">
            @if (Model.PendingFriendRequests != null && Model.PendingFriendRequests.Any())
            {
                <div class="col-12 mb-4 pending-requests-section">
                    <div class="card mb-4 section-header">
                        <div class="card-body p-4">
                            <h3 class="fw-700 text-grey-900">
                                <i class="feather-users text-current mr-2"></i> Incoming Friend Requests
                            </h3>
                        </div>
                    </div>
                    <div class="row pending-requests-container">
                @foreach (var user in Model.PendingFriendRequests)
                {
                            <div class="col-xl-4 col-lg-6 col-md-6 user-item" data-user-name="@user.Name.ToLower()" data-user-email="@user.Email.ToLower()">
                                <div class="card mb-4 d-block w-100 shadow-xss rounded-lg p-4 border-0 text-center user-card">
                                    <a href="/Users/UserPage/@user.Id" class="ml-auto mr-auto rounded-lg overflow-hidden d-inline-block user-image">
                                        <img src="@(user.Img ?? "/images/user-12.png")" alt="@user.Name" class="p-0 w100 shadow-xss">
                                    </a>
                                    <h4 class="fw-700 font-xs mt-3 mb-1">@user.Name</h4>
                                    <p class="fw-600 font-xssss text-grey-500 mt-0 mb-2">@user.Email</p>
                                    <div class="clearfix"></div>
                                    <div class="friend-actions d-flex flex-column" data-user-id="@user.IdentityId">
                                        <a href="/Users/UserPage/@user.Id" class="btn pt-2 pb-2 ps-3 pe-3 lh-24 ls-3 rounded-xl bg-primary font-xsssss fw-700 ls-lg text-white">
                                            <i class="feather-user font-xss"></i> PROFILE
                                        </a>
                                        <div class="d-flex justify-content-center mt-2">
                                            <button class="btn pt-2 pb-2 ps-3 pe-3 lh-24 ls-3 rounded-xl bg-primary font-xsssss fw-700 ls-lg text-white accept-friend-btn" data-user-id="@user.IdentityId">
                                                <i class="feather-user-plus font-xss"></i> ACCEPT
                                            </button>
                                            <button class="btn pt-2 pb-2 ps-3 pe-3 lh-24 ms-1 ls-3 rounded-xl bg-danger font-xsssss fw-700 ls-lg text-white reject-friend-btn" data-user-id="@user.IdentityId">
                                                <i class="feather-user-minus font-xss"></i> REJECT
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }

            @if (Model.Friends != null && Model.Friends.Any())
            {
                <div class="col-12 mb-4 friends-section">
                    <div class="card mb-4 section-header">
                        <div class="card-body p-4">
                            <h3 class="fw-700 text-grey-900">
                                <i class="feather-user-check text-current mr-2"></i> Friends
                            </h3>
                        </div>
                    </div>
                    <div class="row friends-container">
                @foreach (var user in Model.Friends)
                {
                            <div class="col-xl-4 col-lg-6 col-md-6 user-item" data-user-name="@user.Name.ToLower()" data-user-email="@user.Email.ToLower()">
                                <div class="card mb-4 d-block w-100 shadow-xss rounded-lg p-4 border-0 text-center user-card">
                                    <a href="/Users/UserPage/@user.Id" class="ml-auto mr-auto rounded-lg overflow-hidden d-inline-block user-image">
                                        <img src="@(user.Img ?? "/images/user-12.png")" alt="@user.Name" class="p-0 w100 shadow-xss">
                                    </a>
                                    <h4 class="fw-700 font-xs mt-3 mb-1">
                                        @user.Name
                                        <i class="feather-user-check text-success ml-1" data-toggle="tooltip" title="Friend"></i>
                                    </h4>
                                    <p class="fw-600 font-xssss text-grey-500 mt-0 mb-2">@user.Email</p>
                                    <div class="clearfix"></div>
                                    <div class="friend-actions d-flex flex-column" data-user-id="@user.IdentityId">
                                        <a href="/Users/UserPage/@user.Id" class="btn pt-2 pb-2 ps-3 pe-3 lh-24 ls-3 rounded-xl bg-primary font-xsssss fw-700 ls-lg text-white">
                                            <i class="feather-user font-xss"></i> PROFILE
                                        </a>
                                        <button class="mt-2 btn pt-2 pb-2 ps-3 pe-3 lh-24 ls-3 rounded-xl bg-danger font-xsssss fw-700 ls-lg text-white remove-friend-btn" data-user-id="@user.IdentityId">
                                            <i class="feather-user-minus font-xss"></i> REMOVE FRIEND
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }

            <div class="col-12 mb-4 other-users-section">
                <div class="card mb-4 section-header">
                    <div class="card-body p-4">
                        <h3 class="fw-700 text-grey-900">
                            <i class="feather-users text-current mr-2"></i> Suggested Friends
                        </h3>
                    </div>
                </div>
                <div class="row other-users-container">
                    @{
                        var filteredUsers = Model.Users.Where(u => !Model.Friends.Any(f => f.IdentityId == u.IdentityId) && 
                                                                  !Model.PendingFriendRequests.Any(p => p.IdentityId == u.IdentityId));
                    }
                    @if (!string.IsNullOrEmpty(Model.SearchTerm) && 
                         !Model.Friends.Any() && 
                         !Model.PendingFriendRequests.Any() && 
                         !filteredUsers.Any())
                    {
                        <div class="col-12">
                            <div class="card w-100 text-center shadow-xss rounded-xxl border-0 p-4 mb-3">
                                <div class="card-body p-3">
                                    <div class="row">
                                        <div class="col-12">
                                            <i class="feather-search text-current display-4 mb-3"></i>
                                            <h2 class="fw-700 text-grey-900 font-xss mt-3">Users with this name or email were not found</h2>
                                            <p class="text-grey-500 font-xssss mt-2">Try searching with different keywords</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        @foreach (var user in filteredUsers)
                        {
                            <div class="col-xl-4 col-lg-6 col-md-6 user-item" data-user-name="@user.Name.ToLower()" data-user-email="@user.Email.ToLower()">
                                <div class="card mb-4 d-block w-100 shadow-xss rounded-lg p-4 border-0 text-center user-card">
                                    <a href="/Users/UserPage/@user.Id" class="ml-auto mr-auto rounded-lg overflow-hidden d-inline-block user-image">
                                        <img src="@(user.Img ?? "/images/user-12.png")" alt="@user.Name" class="p-0 w100 shadow-xss">
                                    </a>
                                    <h4 class="fw-700 font-xs mt-3 mb-1">@user.Name</h4>
                                    <p class="fw-600 font-xssss text-grey-500 mt-0 mb-2">@user.Email</p>
                                    <div class="clearfix"></div>
                                    <div class="friend-actions d-flex flex-column" data-user-id="@user.IdentityId">
                                        <a href="/Users/UserPage/@user.Id" class="btn pt-2 pb-2 ps-3 pe-3 lh-24 ls-3 rounded-xl bg-primary font-xsssss fw-700 ls-lg text-white">
                                            <i class="feather-user font-xss"></i> PROFILE
                                        </a>
                                        <button class="mt-2 btn pt-2 pb-2 ps-3 pe-3 lh-24 ls-3 rounded-xl bg-primary font-xsssss fw-700 ls-lg text-white add-friend-btn" data-user-id="@user.IdentityId">
                                            <i class="feather-user-plus font-xss"></i> ADD FRIEND
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/friends.js"></script>
    <script>
        function updateUsers(searchTerm) {
            // Показываем индикатор загрузки
            $('#usersContainer').addClass('loading');
            
            $.get('/Users/Users', { search: searchTerm })
                .done(function (response) {
                    // Обновляем контент
                    const $newContent = $(response).find('#usersContainer');
                    $('#usersContainer').html($newContent.html());
                    
                    // Обновляем URL без перезагрузки страницы
                    const url = new URL(window.location);
                    if (searchTerm && searchTerm.trim()) {
                        url.searchParams.set('search', searchTerm);
                    } else {
                        url.searchParams.delete('search');
                    }
                    history.pushState({ searchTerm: searchTerm }, '', url);

                    // Переинициализируем тултипы
                    $('[data-toggle="tooltip"]').tooltip();
                })
                .fail(function() {
                    console.error('Failed to filter users');
                })
                .always(function() {
                    // Скрываем индикатор загрузки
                    $('#usersContainer').removeClass('loading');
                });
        }

        let searchTimeout;
        
        // Обработчик ввода в поле поиска
        $('#userSearch').on('input', function() {
            clearTimeout(searchTimeout);
            const searchTerm = $(this).val().trim();
            
            // Добавляем задержку 300мс перед отправкой запроса
            searchTimeout = setTimeout(function() {
                updateUsers(searchTerm);
            }, 300);
        });

        // Предотвращаем стандартную отправку формы
        $('#searchForm').on('submit', function(e) {
            e.preventDefault();
            const searchTerm = $('#userSearch').val().trim();
            updateUsers(searchTerm);
        });

        // Обработка навигации по истории браузера
        $(window).on('popstate', function(e) {
            const state = e.originalEvent.state;
            const searchTerm = state ? state.searchTerm : '';
            
            // Обновляем поле поиска
            $('#userSearch').val(searchTerm);
            // Обновляем результаты без добавления в историю
            updateUsers(searchTerm);
        });

        // Инициализация при загрузке страницы
        $(document).ready(function() {
            // Инициализируем тултипы
            $('[data-toggle="tooltip"]').tooltip();

            // Применяем начальную фильтрацию если есть параметр в URL
            const urlParams = new URLSearchParams(window.location.search);
            const searchTerm = urlParams.get('search') || '';
            if (searchTerm) {
                $('#userSearch').val(searchTerm);
                updateUsers(searchTerm);
            }
        });
    </script>
} 